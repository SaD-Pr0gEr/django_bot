import time

from telebot.types import Message, ReplyKeyboardRemove

from main.bot.archive.states_archive import search_commands_state
from main.bot.handlers.users.start import start_reset
from main.bot.loader import bot
from translator.models import WordsHistory


@bot.message_handler(func=lambda state: search_commands_state.search_type)
def search(message: Message):
    search_commands_state.search_type = None
    if message.text.lower() == "–ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ":
        search_commands_state.by_first = True
    elif message.text.lower() == "–ø–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –±—É–∫–≤":
        search_commands_state.icontains = True
    elif message.text.lower() == "—Å—Ç—Ä–æ–≥–æ –ø–æ —Å–ª–æ–≤–∞–º":
        search_commands_state.iexact = True
    else:
        search_commands_state.reset_state()
        start_reset(message)
    bot.send_message(
        message.from_user.id,
        "–ö—Ä—É—Ç–æ! –í–≤–æ–¥–∏—Ç–µ –±—É–∫–≤—É(–∏–ª–∏ —Å–ª–æ–≤–æ)",
        reply_markup=ReplyKeyboardRemove()
    )


@bot.message_handler(func=lambda state: search_commands_state.by_first)
def by_first(message: Message):
    search_commands_state.reset_state()
    if len(message.text.split()) > 1 or len(message.text) > 1:
        bot.send_message(message.from_user.id, "–û—Ä—É... –≤–∞–º –≥–æ–≤–æ—Ä–∏–ª–∏ –≤–≤–æ–¥–∏—Ç—å 1 –±—É–∫–≤—É üåö")
        time.sleep(1)
        start_reset(message)
        return
    text = [words.word for words in WordsHistory.objects.filter(
        word__startswith=message.text,
        tg_user__tg_user_ID=message.from_user.id
    ).all()]
    if text:
        bot.send_message(message.from_user.id, "–†–µ–∑—É–ª—å—Ç–∞—Ç:")
        bot.send_message(message.from_user.id, "\n".join(text))
    else:
        bot.send_message(message.from_user.id, f"–°–ª–æ–≤–∞ –Ω–∞—á–∏–Ω–∞—é—â–∏–µ —Å {message.text} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    start_reset(message)


@bot.message_handler(func=lambda state: search_commands_state.icontains)
def icontains(message: Message):
    search_commands_state.reset_state()
    text = [word.word for word in WordsHistory.objects.filter(
        word__icontains=message.text,
        tg_user__tg_user_ID=message.from_user.id
    ).all()]
    if text:
        bot.send_message(message.from_user.id, "–†–µ–∑—É–ª—å—Ç–∞—Ç:")
        bot.send_message(message.from_user.id, "\n".join(text))
    else:
        bot.send_message(message.from_user.id, f"–°–ª–æ–≤–∞ —Å –±—É–∫–≤–æ–π {message.text} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    start_reset(message)


@bot.message_handler(func=lambda state: search_commands_state.iexact)
def iexact(message: Message):
    search_commands_state.reset_state()
    text = [word.word for word in WordsHistory.objects.filter(
        word__iexact=message.text,
        tg_user__tg_user_ID=message.from_user.id
    ).all()]
    if text:
        bot.send_message(message.from_user.id, "–†–µ–∑—É–ª—å—Ç–∞—Ç:")
        bot.send_message(message.from_user.id, "\n".join(text))
    else:
        bot.send_message(message.from_user.id, f"–°–ª–æ–≤–∞ —Å –±—É–∫–≤–æ–π {message.text} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    start_reset(message)
