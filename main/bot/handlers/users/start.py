import time

from django.contrib.auth import get_user_model
from telebot.types import Message, ReplyKeyboardRemove
from main.bot.archive.keyboards_archive import start_keyboards, dict_commands, language_keyboards, search_commands
from main.bot.archive.states_archive import start_commands_state, translate_commands_state, search_commands_state, \
    add_word_state
from main.bot.loader import bot
from telegram.models import TelegramProfile
from translator.models import WordsHistory, Dictionary


def start_reset(message: Message):
    start_commands_state.reset_state()
    start_commands_state.category = True
    bot.send_message(
        message.from_user.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É",
        reply_markup=start_keyboards()
    )


@bot.message_handler(['start'])
def start(message: Message):
    if not TelegramProfile.objects.filter(tg_user_ID=message.from_user.id).first():
        TelegramProfile.objects.create(tg_user_ID=message.from_user.id)
    text = [
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫...",
        "–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É",
    ]
    start_commands_state.category = True
    bot.send_message(
        message.from_user.id,
        "\n".join(text),
        reply_markup=start_keyboards()
    )


@bot.message_handler(func=lambda state: start_commands_state.category)
def get_category(message: Message):
    start_commands_state.category = None
    if message.text.lower() == "—Å–ª–æ–≤–∞—Ä–∏ üìï":
        start_commands_state.dictionary = True
        text = [
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Å–ª–æ–≤–∞—Ä–µ–π"
        ]
        bot.send_message(
            message.from_user.id,
            "\n".join(text),
            reply_markup=dict_commands
        )
    elif message.text.lower() == "–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ üá¨üáß":
        translate_commands_state.from_language = True
        text = [
            "–ö—Ä—É—Ç–æ!",
            "C –∫–∞–∫–æ–≥–æ —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏?"
        ]
        bot.send_message(
            message.from_user.id,
            "\n".join(text),
            reply_markup=language_keyboards
        )
    elif message.text.lower() == "–ø–æ–∏—Å–∫ —Å–ª–æ–≤ üîç":
        search_commands_state.search_type = True
        text = [
            "–û–∫–µ–π... –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞"
        ]
        bot.send_message(
            message.from_user.id,
            "\n".join(text),
            reply_markup=search_commands
        )
    elif message.text.lower() == "–ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–≤–æ–¥–æ–≤ üìì":
        text = [word.word for word in WordsHistory.objects.filter(
            tg_user__tg_user_ID=message.from_user.id
        ).all()]
        if text:
            bot.send_message(message.from_user.id, "–ò—Å—Ç–æ—Ä–∏—è:")
            time.sleep(1)
            bot.send_message(message.from_user.id, "\n".join(text))
        else:
            bot.send_message(message.from_user.id, "–í—ã –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏–ª–∏)")
        start_reset(message)
    elif message.text.lower() == "–¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –≤ —Å–ª–æ–≤–∞—Ä—å ‚ûï":
        add_word_state.get_dict = True
        get_dicts = [f"{dicts.pk} - {dicts.name}" for dicts in
                     Dictionary.objects.filter(tg_user__tg_user_ID=message.from_user.id).all()]
        if get_dicts:
            bot.send_message(
                message.from_user.id,
                "–í–≤–æ–¥–∏—Ç–µ ID(–Ω–æ–º–µ—Ä) —Å–ª–æ–≤–∞—Ä—è",
                reply_markup=ReplyKeyboardRemove()
            )
            time.sleep(1)
            bot.send_message(message.from_user.id, "\n".join(get_dicts))
        else:
            bot.send_message(message.from_user.id, "–°–ª–æ–≤–∞—Ä–µ–π –Ω–µ—Ç")
    elif message.text.lower() == "—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å —Å–∞–π—Ç–æ–º(–∏—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫, —Å–ª–æ–≤–∞—Ä–∏ –∏ —Ç–ø)":
        user = get_user_model()
        check_user = user.objects.filter(user_profiles__tg_user_ID=message.from_user.id).first()
        if check_user:
            tg_user = TelegramProfile.objects.filter(tg_user_ID=message.from_user.id).first()
            get_user_words = WordsHistory.objects.filter(tg_user=tg_user).all()
            get_user_dict = Dictionary.objects.filter(tg_user=tg_user).all()
            if get_user_words:
                for data in get_user_words:
                    data.user = check_user
                    data.save()
            if get_user_dict:
                for save in get_user_dict:
                    save.user = check_user
                    save.save()
            get_site_user_words = WordsHistory.objects.filter(user=tg_user.user).all()
            if get_site_user_words:
                for word in get_site_user_words:
                    word.tg_user = tg_user
                    word.save()
            get_site_user_dicts = Dictionary.objects.filter(user=tg_user.user).all()
            if get_site_user_dicts:
                for dicts in get_site_user_dicts:
                    dicts.tg_user = tg_user
                    dicts.save()
            bot.send_message(message.from_user.id, "–£c–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!")
        else:
            bot.send_message(message.from_user.id, "–£ –≤–∞—Å –Ω–µ—Ç—É –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ —Å–∞–π—Ç–µ!")
        start_reset(message)
    else:
        start_reset(message)
